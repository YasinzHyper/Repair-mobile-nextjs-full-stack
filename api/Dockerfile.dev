# Development Dockerfile for Backend API
FROM node:20-alpine AS base

# Install dependencies only when needed
FROM base AS deps
RUN apk add --no-cache libc6-compat openssl
WORKDIR /app

# Install dependencies
COPY package.json package-lock.json* ./
RUN npm ci

# Development stage
FROM base AS development
WORKDIR /app

ENV NODE_ENV=development

# Install required packages for Prisma and OpenSSL
RUN apk add --no-cache openssl libc6-compat

# Use root user for development to avoid permission issues with volume mounts
# This is acceptable for development but should not be used in production
USER root

# Copy node_modules from deps stage
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Copy and setup entrypoint script
COPY scripts/docker-entrypoint.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/docker-entrypoint.sh

# Generate Prisma client
RUN npx prisma generate

EXPOSE 5051

ENTRYPOINT ["docker-entrypoint.sh"]
CMD ["npm", "run", "dev"]
